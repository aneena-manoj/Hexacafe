@model Hexacafe.Models.MenuItem
@using Hexacafe.Models;

@{
    ViewBag.Title = "AddFoodItem";
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<MenuItem> ListofCategory = new List<MenuItem>();
    ViewBag.Title = "AddFoodCategory";
    if (ViewBag.FoodItemsList != null)
    {
        ListofCategory = ViewBag.FoodItemsList;
    }
}
@if (ViewBag.FoodItemsList != null)
{
    <table class="table table-responsive" id="previouscategory">
        <thead>
            <tr>
                <th>
                    Food Item Name
                </th>
                <th>
                    Price
                </th>
                <th>
                    Veg or Non-Veg or Drinks
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ListofCategory)
            {
                <tr>
                    <td>
                        @item.itemname
                    </td>
                    <td>
                        @item.price
                    </td>
                    <td class="mainid">
                        @item.MainFoodCategoryID
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

<h2>AddFoodItem</h2>


@using (Html.BeginForm("AddFoodItem", "ControlPanel", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MenuItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.itemname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.itemname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.itemname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.MainFoodCategoryID, "MainFoodCategoryID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("MainFoodCategoryID", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.DropDownListFor(Model => Model.MainFoodCategoryID, new SelectList(ViewBag.FoodMainID as System.Collections.IEnumerable, "mainid", "maincategory"), "Select a Food Type", new { id = "MainFoodCategoryID", @class = "form-control" })

                @Html.ValidationMessageFor(model => model.MainFoodCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.FoodCategoryID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.FoodCategoryID,null, new { htmlAttributes = new { @class = "form-control" } })*@
                <select id="FoodCategoryID" name="FoodCategoryID" class="form-control"></select>
                @Html.ValidationMessageFor(model => model.FoodCategoryID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.itempic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="itempic" id="itempic" value="" class="form-control" />
                @Html.ValidationMessageFor(model => model.itempic, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add Item" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div class="row text-center">
    <a name="back" href="/Restaurent/ControlPanel/ControlPanelhome" class="btn btn-info">Back to Control Panel</a>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jquery")

    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {

            $("#MainFoodCategoryID").change(function () {

                if ($("#MainFoodCategoryID option:selected").val() != '') {
                    // Get FoodCategories
                    var data = { "FoodMainID": $("#MainFoodCategoryID option:selected").val().trim() }
                    $.ajax({
                        url: "/Restaurent/AjaxCall/GetFoodCategory",
                        type: "POST",

                        data: JSON.stringify(data),
                        dataType: "json",
                        contentType: "application/json",
                        success: function (status) {
                            if (status != "") {
                                $.each(status, function (index, value) {
                                    $("#FoodCategoryID").append('<option rel="' + index + '" value="' + value.FoodCategoryid + '">' + value.CategoryName + '</option>');
                                })
                                $("#FoodCategoryID").prepend("<option value='' selected='selected'>--Select Food  Category--</option>");
                            }
                        },
                        error: function () {
                            alert('Something went wrong , Please try again')
                        }

                    })
                }

            });
            if ($("#previouscategory tbody tr td.mainid").text().trim() != '') {

                $("#previouscategory tbody tr td.mainid").each(function () {
                    var mainid = $(this).text().trim();
                    switch (mainid) {
                        case "1":
                            $(this).text('Veg');
                            break;
                        case "2":
                            $(this).text('Non-Veg');
                            break;
                        case "3":
                            $(this).text('Drinks');
                            break;
                    }
                })
            }
        })


    </script>
}
